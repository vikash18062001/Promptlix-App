def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'

android {
  namespace "com.promptlix.trend"
  compileSdk rootProject.ext.compileSdkVersion

  signingConfigs {
    release {
        if (keystorePropertiesFile.exists()) {
            storeFile rootProject.file(keystoreProperties.getProperty('storeFile'))
            storePassword keystoreProperties.getProperty('storePassword')
            keyAlias keystoreProperties.getProperty('keyAlias')
            keyPassword keystoreProperties.getProperty('keyPassword')
        }
    }
  }

  defaultConfig {
    applicationId "com.promptlix.trend"
    minSdk rootProject.ext.minSdkVersion
    targetSdk rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    aaptOptions {
      ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

repositories {
  // flatDir is still used for Capacitor/Cordova plugins
  flatDir {
    dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
  }
  google()
  mavenCentral()
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')

  // AndroidX compatible with compileSdk 34
  implementation "androidx.appcompat:appcompat:1.6.1"
  implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
  implementation "androidx.core:core:1.14.0"        // Downgraded for SDK 34
  implementation "androidx.core:core-splashscreen:1.0.1"

  implementation project(':capacitor-android')
  implementation project(':capacitor-cordova-android-plugins')

  testImplementation "junit:junit:4.13.2"
  androidTestImplementation "androidx.test.ext:junit:1.1.5"
  androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
}

apply from: 'capacitor.build.gradle'

// Firebase
try {
  def servicesJSON = file('google-services.json')
  if (servicesJSON.exists() && servicesJSON.text) {
    apply plugin: 'com.google.gms.google-services'
  }
} catch(Exception e) {
  logger.info("google-services.json not found, google-services plugin not applied.")
}
